{
  "src/lib/components/BokehJSON.react.js": {
    "description": "BokehJSON renders Bokeh JSON.",
    "displayName": "BokehJSON",
    "methods": [
      {
        "name": "getRef",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderChart",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks"
      },
      "json": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "A Bokeh json object."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  },
  "src/lib/components/HighChart.react.js": {
    "description": "HighChart renders Highcharts.js JSON",
    "displayName": "HighChart",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "constructorType": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "'chart', 'stockChart', 'mapChart', 'ganttChart'"
      },
      "options": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The highcharts chart description"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/Svg.react.js": {
    "description": "Svg is used to render arbitrary SVG content",
    "displayName": "Svg",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks"
      },
      "contents": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An SVG string"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  },
  "src/lib/components/VegaLite.react.js": {
    "description": "VegaLite renders vega-lite visualizations.",
    "displayName": "VegaLite",
    "methods": [
      {
        "name": "getRef",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "el",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks"
      },
      "spec": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "A Vega-Lite spec."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  }
}